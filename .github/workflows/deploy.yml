name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      CLUSTER_NAME: barcode-cluster

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set Docker Tag
        run: echo "TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Backends
        run: mvn clean package -DskipTests
        working-directory: ./Backend

      - name: Build & Push Frontend Docker Image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/barcode-frontend:${{ env.TAG }} ./Frontend-UI
          docker push ${{ steps.login-ecr.outputs.registry }}/barcode-frontend:${{ env.TAG }}

      - name: Build & Push Backend Docker Image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/barcode-backend:${{ env.TAG }} ./Backend
          docker push ${{ steps.login-ecr.outputs.registry }}/barcode-backend:${{ env.TAG }}

      - name: Patch Image Tags in K8s Files
        run: |
          sed -i "s|IMAGE_TAG_UI_CONTAINER|${{ steps.login-ecr.outputs.registry }}/barcode-frontend:${{ env.TAG }}|g" Frontend-UI/Kubernetes/Deployment.yaml
          sed -i "s|IMAGE_TAG_BACKEND_CONTAINER|${{ steps.login-ecr.outputs.registry }}/barcode-backend:${{ env.TAG }}|g" Backend/Kubernetes/Deployment.yaml

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Create TLS Secret
        run: |
          kubectl apply -f Frontend-UI/Kubernetes/tls-secret.yaml

      - name: Deploy All Kubernetes Resources
        run: |
          kubectl apply -f Backend/Kubernetes/
          kubectl apply -f Frontend-UI/Kubernetes/Deployment.yaml
          kubectl apply -f Frontend-UI/Kubernetes/Service.yaml
          kubectl apply -f Frontend-UI/Kubernetes/Ingress.yaml
          

      - name: Fetch Ingress Hostname
        run: |
          for i in {1..30}; do
            INGRESS=$(kubectl get ingress barcode-ingress -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            if [ "$INGRESS" != "" ]; then
              echo "Ingress Hostname: $INGRESS"
              echo "FRONTEND_URL=https://$INGRESS" >> $GITHUB_ENV
              break
            fi
            echo "Waiting for ingress..."
            sleep 10
          done
